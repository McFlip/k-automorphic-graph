test_part.cpp: In function ‘int main(int, char**)’:
test_part.cpp:29:15: error: ‘_index_t’ was not declared in this scope
     property< _index_t, int > > > graph_type;
               ^
test_part.cpp:29:29: error: template argument 1 is invalid
     property< _index_t, int > > > graph_type;
                             ^
test_part.cpp:29:31: error: template argument 5 is invalid
     property< _index_t, int > > > graph_type;
                               ^
test_part.cpp:29:33: error: template argument 1 is invalid
     property< _index_t, int > > > graph_type;
                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:25:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/graph_traits.hpp: In instantiation of ‘struct boost::graph_traits<int>’:
test_part.cpp:30:37:   required from here
/usr/local/include/boost/graph/graph_traits.hpp:57:52: error: ‘int’ is not a class, struct, or union type
         typedef typename G::vertex_descriptor      vertex_descriptor;
                                                    ^
/usr/local/include/boost/graph/graph_traits.hpp:58:52: error: ‘int’ is not a class, struct, or union type
         typedef typename G::edge_descriptor        edge_descriptor;
                                                    ^
/usr/local/include/boost/graph/graph_traits.hpp:65:52: error: ‘int’ is not a class, struct, or union type
         typedef typename G::directed_category      directed_category;
                                                    ^
/usr/local/include/boost/graph/graph_traits.hpp:66:52: error: ‘int’ is not a class, struct, or union type
         typedef typename G::edge_parallel_category edge_parallel_category;
                                                    ^
/usr/local/include/boost/graph/graph_traits.hpp:67:52: error: ‘int’ is not a class, struct, or union type
         typedef typename G::traversal_category     traversal_category;
                                                    ^
In file included from /usr/local/include/boost/iterator/iterator_categories.hpp:15:0,
                 from /usr/local/include/boost/unordered/detail/util.hpp:17,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:15,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/mpl/eval_if.hpp: In instantiation of ‘struct boost::mpl::eval_if<boost::detail::has_vertex_property_type<int, mpl_::bool_<false> >, boost::detail::get_vertex_property_type<int>, boost::no_property>’:
/usr/local/include/boost/graph/graph_traits.hpp:276:12:   required from ‘struct boost::vertex_property_type<int>’
/usr/local/include/boost/graph/properties.hpp:201:12:   required from ‘struct boost::detail::vertex_property_map<int, boost::vertex_index_t>’
/usr/local/include/boost/graph/properties.hpp:212:10:   required from ‘struct boost::property_map<int, boost::vertex_index_t>’
test_part.cpp:35:53:   required from here
/usr/local/include/boost/mpl/eval_if.hpp:38:31: error: no type named ‘type’ in ‘boost::mpl::eval_if<boost::detail::has_vertex_property_type<int, mpl_::bool_<false> >, boost::detail::get_vertex_property_type<int>, boost::no_property>::f_ {aka struct boost::no_property}’
     typedef typename f_::type type;
                               ^
test_part.cpp:35:55: error: ‘type’ in ‘struct boost::property_map<int, boost::vertex_index_t>’ does not name a type
     typedef property_map<graph_type, vertex_index_t>::type IndexMap;
                                                       ^
test_part.cpp:37:25: error: ‘v_descriptor’ was not declared in this scope
     typedef std::vector<v_descriptor> vert_vec;
                         ^
test_part.cpp:37:37: error: template argument 1 is invalid
     typedef std::vector<v_descriptor> vert_vec;
                                     ^
test_part.cpp:37:37: error: template argument 2 is invalid
test_part.cpp:38:24: error: the value of ‘v_descriptor’ is not usable in a constant expression
     typedef std::pair< v_descriptor, int > hop_pair_t;
                        ^
test_part.cpp:37:25: note: ‘v_descriptor’ was not declared ‘constexpr’
     typedef std::vector<v_descriptor> vert_vec;
                         ^
test_part.cpp:38:42: error: type/value mismatch at argument 1 in template parameter list for ‘template<class _T1, class _T2> struct std::pair’
     typedef std::pair< v_descriptor, int > hop_pair_t;
                                          ^
test_part.cpp:38:42: note:   expected a type, got ‘v_descriptor’
In file included from /usr/include/c++/5/bits/stl_algobase.h:64:0,
                 from /usr/include/c++/5/bits/char_traits.h:39,
                 from /usr/include/c++/5/ios:40,
                 from /usr/include/c++/5/ostream:38,
                 from /usr/include/c++/5/iostream:39,
                 from test_part.cpp:1:
/usr/include/c++/5/bits/stl_pair.h: In instantiation of ‘struct std::pair<void, void>’:
test_part.cpp:65:14:   required from here
/usr/include/c++/5/bits/stl_pair.h:101:11: error: ‘std::pair<_T1, _T2>::first’ has incomplete type
       _T1 first;                 /// @c first is a copy of the first object
           ^
/usr/include/c++/5/bits/stl_pair.h:101:11: error: invalid use of ‘void’
/usr/include/c++/5/bits/stl_pair.h:102:11: error: ‘std::pair<_T1, _T2>::second’ has incomplete type
       _T2 second;                /// @c second is a copy of the second object
           ^
/usr/include/c++/5/bits/stl_pair.h:102:11: error: invalid use of ‘void’
/usr/include/c++/5/bits/stl_pair.h:112:26: error: forming reference to void
       _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
                          ^
/usr/include/c++/5/bits/stl_pair.h:133:12: error: forming reference to void
  constexpr pair(_U1&& __x, const _T2& __y)
            ^
/usr/include/c++/5/bits/stl_pair.h:138:12: error: forming reference to void
  constexpr pair(const _T1& __x, _U2&& __y)
            ^
test_part.cpp:68:35: error: qualified-id in declaration before ‘ci’
     graph_type::children_iterator ci;
                                   ^
test_part.cpp:69:35: error: qualified-id in declaration before ‘ci_end’
     graph_type::children_iterator ci_end;
                                   ^
test_part.cpp:70:17: error: variable or field ‘v’ declared void
     vertex_iter v;
                 ^
test_part.cpp:71:17: error: variable or field ‘v_end’ declared void
     vertex_iter v_end;
                 ^
test_part.cpp:72:17: error: variable or field ‘v_next_col’ declared void
     vertex_iter v_next_col;
                 ^
test_part.cpp:73:15: error: variable or field ‘e’ declared void
     edge_iter e;
               ^
test_part.cpp:74:15: error: variable or field ‘e_end’ declared void
     edge_iter e_end;
               ^
test_part.cpp:75:14: error: variable or field ‘vi’ declared void
     adj_iter vi;
              ^
test_part.cpp:76:14: error: variable or field ‘vi_end’ declared void
     adj_iter vi_end;
              ^
test_part.cpp:79:5: error: ‘IndexMap’ was not declared in this scope
     IndexMap index;
     ^
test_part.cpp:84:19: error: ‘avtrow’ was not declared in this scope
     v_descriptor *avtrow = new v_descriptor[K];             // the initial row
                   ^
test_part.cpp:84:32: error: ‘v_descriptor’ does not name a type
     v_descriptor *avtrow = new v_descriptor[K];             // the initial row
                                ^
test_part.cpp:90:18: error: expected ‘;’ before ‘bestV’
     v_descriptor bestV;
                  ^
test_part.cpp:98:18: error: expected ‘;’ before ‘vLocalID’
     v_descriptor vLocalID;
                  ^
test_part.cpp:112:32: error: no matching function for call to ‘num_vertices(graph_type&)’
     nvert = num_vertices(graph1);
                                ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1611:5: note: candidate: template<class Config, class Base> typename Config::vertices_size_type boost::num_vertices(const boost::adj_list_helper<Config, Base>&)
     num_vertices(const adj_list_helper<Config, Base>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1611:5: note:   template argument deduction/substitution failed:
test_part.cpp:112:32: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     nvert = num_vertices(graph1);
                                ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:481:1: note: candidate: template<class G> typename boost::subgraph<Graph>::vertices_size_type boost::num_vertices(const boost::subgraph<Graph>&)
 num_vertices(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:481:1: note:   template argument deduction/substitution failed:
test_part.cpp:112:32: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     nvert = num_vertices(graph1);
                                ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:320:3: note: candidate: template<class G, class EP, class VP> typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertices_size_type boost::num_vertices(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   num_vertices(const filtered_graph<G, EP, VP>& g) {
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:320:3: note:   template argument deduction/substitution failed:
test_part.cpp:112:32: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     nvert = num_vertices(graph1);
                                ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1113:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::num_vertices(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 num_vertices(const BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1113:1: note:   template argument deduction/substitution failed:
test_part.cpp:112:32: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     nvert = num_vertices(graph1);
                                ^
test_part.cpp:113:29: error: no matching function for call to ‘num_edges(graph_type&)’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:694:5: note: candidate: template<class Config> typename Config::edges_size_type boost::num_edges(const boost::directed_graph_helper<Config>&)
     num_edges(const directed_graph_helper<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:694:5: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::directed_graph_helper<Config>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1018:5: note: candidate: template<class Config> typename Config::edges_size_type boost::num_edges(const boost::undirected_graph_helper<C>&)
     num_edges(const undirected_graph_helper<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1018:5: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::undirected_graph_helper<C>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1387:5: note: candidate: template<class Config> typename Config::edges_size_type boost::num_edges(const boost::bidirectional_graph_helper_with_property<Config>&)
     num_edges(const bidirectional_graph_helper_with_property<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1387:5: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::bidirectional_graph_helper_with_property<Config>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:495:1: note: candidate: template<class G> typename boost::subgraph<Graph>::edges_size_type boost::num_edges(const boost::subgraph<Graph>&)
 num_edges(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:495:1: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:326:3: note: candidate: template<class G, class EP, class VP> typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::edges_size_type boost::num_edges(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   num_edges(const filtered_graph<G, EP, VP>& g) {
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:326:3: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1240:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::num_edges(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 num_edges(const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1240:1: note:   template argument deduction/substitution failed:
test_part.cpp:113:29: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     nedge = num_edges(graph1);
                             ^
test_part.cpp:117:37: error: no matching function for call to ‘get(boost::vertex_index_t, graph_type&)’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:128:19: note: candidate: template<class T> const T& get(const T*, std::ptrdiff_t)
   inline const T& get(const T* pa, std::ptrdiff_t k) { return pa[k]; }
                   ^
/usr/local/include/boost/property_map/property_map.hpp:128:19: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const T*’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const GraphProperty& boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> GraphProperty& boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::const_type boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::type boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const EdgeProperty& boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeProperty& boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::const_type boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::type boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const VertexProperty& boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> VertexProperty& boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::const_type boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::type boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type>::reference boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type>::reference boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note: candidate: template<class G, class EP, class VP, class Property, class Key> typename boost::property_map_value<G, Property>::type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&, const Key&)
   get(Property p, const filtered_graph<G, EP, VP>& g, const Key& k)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::const_type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::type boost::get(Property, boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note: candidate: template<class Key> std::__cxx11::string boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&, boost::type<Value>)
 get(const std::string& name, const dynamic_properties& dp, const Key& key, type<Value>)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::const_type boost::get(boost::local_property<Property>, const boost::subgraph<Graph>&)
 get(local_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::type boost::get(boost::local_property<Property>, boost::subgraph<Graph>&)
 get(local_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::const_type boost::get(boost::global_property<Property>, const boost::subgraph<Graph>&)
 get(global_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::type boost::get(boost::global_property<Property>, boost::subgraph<Graph>&)
 get(global_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:982:1: note: candidate: template<class G, class Property, class Key> typename boost::property_traits<typename boost::property_map<boost::subgraph<Graph>, Property>::const_type>::value_type boost::get(Property, const boost::subgraph<Graph>&, const Key&)
 get(Property p, const subgraph<G>& g, const Key& k) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:982:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:973:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::const_type boost::get(Property, const boost::subgraph<Graph>&)
 get(Property p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:973:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:966:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::type boost::get(Property, boost::subgraph<Graph>&)
 get(Property p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:966:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::const_type>::reference boost::get(Property, const boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, const adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::type>::reference boost::get(Property, boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::const_type boost::get(Property, const boost::adj_list_helper<Config, Base>&)
     get(Property p, const adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::type boost::get(Property, boost::adj_list_helper<Config, Base>&)
     get(Property p, adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note: candidate: template<class Tag, class Vertex, class EdgeVec, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note: candidate: template<class Tag, class Vertex, class Iter, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_iter<Vertex, Iter, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::detail::stored_edge_iter<Vertex, Iter, Property>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note: candidate: template<class Tag, class Vertex, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_property<Vertex, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::detail::stored_edge_property<Vertex, Property>’ and ‘graph_type {aka int}’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1326:1: note: candidate: template<class T> typename boost::optional<T>::pointer_type boost::get(boost::optional<T>*)
 get ( optional<T>* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1326:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::optional<T>*’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1318:1: note: candidate: template<class T> typename boost::optional<T>::pointer_const_type boost::get(const boost::optional<T>*)
 get ( optional<T> const* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1318:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::optional<T>*’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1308:1: note: candidate: template<class T> typename boost::optional<T>::reference_type boost::get(boost::optional<T>&)
 get ( optional<T>& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1308:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::optional<T>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1300:1: note: candidate: template<class T> typename boost::optional<T>::reference_const_type boost::get(const boost::optional<T>&)
 get ( optional<T> const& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1300:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::optional<T>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:981:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:981:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1004:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1004:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1049:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1049:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1068:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1068:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:301:3: note: candidate: template<class PropertyMap, class Reference, class K> Reference boost::get(const boost::put_get_helper<Reference, PropertyMap>&, const K&)
   get(const put_get_helper<Reference, PropertyMap>& pa, const K& k)
   ^
/usr/local/include/boost/property_map/property_map.hpp:301:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::put_get_helper<Reference, PropertyMap>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:164:3: note: candidate: template<class K, class V> const typename boost::readable_property_map_archetype<KeyArchetype, ValueArchetype>::reference& boost::get(const boost::readable_property_map_archetype<K, V>&, const typename boost::readable_property_map_archetype<K, V>::key_type&)
   get(const readable_property_map_archetype<K,V>&, 
   ^
/usr/local/include/boost/property_map/property_map.hpp:164:3: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::readable_property_map_archetype<K, V>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::non_const_type boost::tuples::get(boost::tuples::cons<HT, TT>&)
 get(cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::const_type boost::tuples::get(const boost::tuples::cons<HT, TT>&)
 get(const cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:844:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >&& std::get(std::tuple<_Args2 ...>&&)
     get(tuple<_Elements...>&& __t) noexcept
     ^
/usr/include/c++/5/tuple:844:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:838:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(const std::tuple<_Args2 ...>&)
     get(const tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:838:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:832:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(std::tuple<_Args2 ...>&)
     get(tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:832:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:297:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:297:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:289:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^
/usr/include/c++/5/array:289:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:280:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:280:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:157:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:157:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘const std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:152:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^
/usr/include/c++/5/utility:152:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:147:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:147:5: note:   template argument deduction/substitution failed:
test_part.cpp:117:37: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     index = get(vertex_index, graph1);
                                     ^
test_part.cpp:127:32: error: no matching function for call to ‘vertices(graph_type&)’
     for(vpair = vertices(graph1); vpair.first != vpair.second; ++vpair.first)
                                ^
In file included from /usr/local/include/boost/graph/detail/adjacency_list.hpp:32:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:223,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note: candidate: template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&)
 typename T::ThereReallyIsNoMemberByThisNameInT vertices(T const&);
                                                ^
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note:   template argument deduction/substitution failed:
/usr/local/include/boost/graph/graph_concepts.hpp: In substitution of ‘template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&) [with T = int]’:
test_part.cpp:127:32:   required from here
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: error: ‘int’ is not a class, struct, or union type
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note: candidate: template<class Config, class Base> std::pair<typename Config::vertex_iterator, typename Config::vertex_iterator> boost::vertices(const boost::adj_list_helper<Config, Base>&)
     vertices(const adj_list_helper<Config, Base>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note:   template argument deduction/substitution failed:
test_part.cpp:127:32: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     for(vpair = vertices(graph1); vpair.first != vpair.second; ++vpair.first)
                                ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:476:1: note: candidate: template<class G> std::pair<typename boost::subgraph<Graph>::vertex_iterator, typename boost::subgraph<Graph>::vertex_iterator> boost::vertices(const boost::subgraph<Graph>&)
 vertices(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:476:1: note:   template argument deduction/substitution failed:
test_part.cpp:127:32: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     for(vpair = vertices(graph1); vpair.first != vpair.second; ++vpair.first)
                                ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note: candidate: template<class G, class EP, class VP> std::pair<typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator, typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator> boost::vertices(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   vertices(const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note:   template argument deduction/substitution failed:
test_part.cpp:127:32: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     for(vpair = vertices(graph1); vpair.first != vpair.second; ++vpair.first)
                                ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> std::pair<boost::iterators::counting_iterator<EdgeIndex>, boost::iterators::counting_iterator<EdgeIndex> > boost::vertices(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 inline vertices(const BOOST_CSR_GRAPH_TYPE& g) {
        ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note:   template argument deduction/substitution failed:
test_part.cpp:127:32: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     for(vpair = vertices(graph1); vpair.first != vpair.second; ++vpair.first)
                                ^
test_part.cpp:167:35: error: request for member ‘create_subgraph’ in ‘graph1’, which is of non-class type ‘graph_type {aka int}’
         subgraph_vect[i] = graph1.create_subgraph();
                                   ^
test_part.cpp:171:38: error: invalid types ‘<unresolved overloaded function type>[int]’ for array subscript
         cout << "Mapping " << index[i] << " to subgraph " << part[i] << endl;
                                      ^
test_part.cpp:172:27: error: invalid types ‘<unresolved overloaded function type>[int]’ for array subscript
         add_vertex(index[i], subgraph_vect[part[i]]);
                           ^
test_part.cpp:193:49: error: no matching function for call to ‘get(boost::vertex_index_t, graph_type&)’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:128:19: note: candidate: template<class T> const T& get(const T*, std::ptrdiff_t)
   inline const T& get(const T* pa, std::ptrdiff_t k) { return pa[k]; }
                   ^
/usr/local/include/boost/property_map/property_map.hpp:128:19: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const T*’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const GraphProperty& boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> GraphProperty& boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::const_type boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::type boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const EdgeProperty& boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeProperty& boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::const_type boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::type boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const VertexProperty& boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> VertexProperty& boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::const_type boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::type boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type>::reference boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type>::reference boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note: candidate: template<class G, class EP, class VP, class Property, class Key> typename boost::property_map_value<G, Property>::type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&, const Key&)
   get(Property p, const filtered_graph<G, EP, VP>& g, const Key& k)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::const_type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::type boost::get(Property, boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note: candidate: template<class Key> std::__cxx11::string boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&, boost::type<Value>)
 get(const std::string& name, const dynamic_properties& dp, const Key& key, type<Value>)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::const_type boost::get(boost::local_property<Property>, const boost::subgraph<Graph>&)
 get(local_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::type boost::get(boost::local_property<Property>, boost::subgraph<Graph>&)
 get(local_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::const_type boost::get(boost::global_property<Property>, const boost::subgraph<Graph>&)
 get(global_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::type boost::get(boost::global_property<Property>, boost::subgraph<Graph>&)
 get(global_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:982:1: note: candidate: template<class G, class Property, class Key> typename boost::property_traits<typename boost::property_map<boost::subgraph<Graph>, Property>::const_type>::value_type boost::get(Property, const boost::subgraph<Graph>&, const Key&)
 get(Property p, const subgraph<G>& g, const Key& k) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:982:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:973:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::const_type boost::get(Property, const boost::subgraph<Graph>&)
 get(Property p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:973:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:966:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::type boost::get(Property, boost::subgraph<Graph>&)
 get(Property p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:966:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::subgraph<Graph>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::const_type>::reference boost::get(Property, const boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, const adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::type>::reference boost::get(Property, boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::const_type boost::get(Property, const boost::adj_list_helper<Config, Base>&)
     get(Property p, const adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::type boost::get(Property, boost::adj_list_helper<Config, Base>&)
     get(Property p, adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note: candidate: template<class Tag, class Vertex, class EdgeVec, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note: candidate: template<class Tag, class Vertex, class Iter, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_iter<Vertex, Iter, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::detail::stored_edge_iter<Vertex, Iter, Property>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note: candidate: template<class Tag, class Vertex, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_property<Vertex, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::detail::stored_edge_property<Vertex, Property>’ and ‘graph_type {aka int}’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1326:1: note: candidate: template<class T> typename boost::optional<T>::pointer_type boost::get(boost::optional<T>*)
 get ( optional<T>* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1326:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::optional<T>*’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1318:1: note: candidate: template<class T> typename boost::optional<T>::pointer_const_type boost::get(const boost::optional<T>*)
 get ( optional<T> const* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1318:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::optional<T>*’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1308:1: note: candidate: template<class T> typename boost::optional<T>::reference_type boost::get(boost::optional<T>&)
 get ( optional<T>& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1308:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::optional<T>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1300:1: note: candidate: template<class T> typename boost::optional<T>::reference_const_type boost::get(const boost::optional<T>&)
 get ( optional<T> const& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1300:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::optional<T>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:981:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:981:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1004:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1004:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1049:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1049:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1068:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1068:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:301:3: note: candidate: template<class PropertyMap, class Reference, class K> Reference boost::get(const boost::put_get_helper<Reference, PropertyMap>&, const K&)
   get(const put_get_helper<Reference, PropertyMap>& pa, const K& k)
   ^
/usr/local/include/boost/property_map/property_map.hpp:301:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::put_get_helper<Reference, PropertyMap>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:164:3: note: candidate: template<class K, class V> const typename boost::readable_property_map_archetype<KeyArchetype, ValueArchetype>::reference& boost::get(const boost::readable_property_map_archetype<K, V>&, const typename boost::readable_property_map_archetype<K, V>::key_type&)
   get(const readable_property_map_archetype<K,V>&, 
   ^
/usr/local/include/boost/property_map/property_map.hpp:164:3: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::readable_property_map_archetype<K, V>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::non_const_type boost::tuples::get(boost::tuples::cons<HT, TT>&)
 get(cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::const_type boost::tuples::get(const boost::tuples::cons<HT, TT>&)
 get(const cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:844:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >&& std::get(std::tuple<_Args2 ...>&&)
     get(tuple<_Elements...>&& __t) noexcept
     ^
/usr/include/c++/5/tuple:844:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:838:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(const std::tuple<_Args2 ...>&)
     get(const tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:838:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:832:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(std::tuple<_Args2 ...>&)
     get(tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:832:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:297:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:297:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:289:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^
/usr/include/c++/5/array:289:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:280:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:280:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:157:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:157:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘const std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:152:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^
/usr/include/c++/5/utility:152:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:147:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:147:5: note:   template argument deduction/substitution failed:
test_part.cpp:193:49: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
     print_graph(graph1, get(vertex_index, graph1));
                                                 ^
test_part.cpp:199:25: error: ‘v’ was not declared in this scope
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                         ^
test_part.cpp:199:28: error: ‘v_end’ was not declared in this scope
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                            ^
test_part.cpp:199:62: error: no matching function for call to ‘vertices(graph_type&)’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/detail/adjacency_list.hpp:32:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:223,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note: candidate: template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&)
 typename T::ThereReallyIsNoMemberByThisNameInT vertices(T const&);
                                                ^
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note:   template argument deduction/substitution failed:
/usr/local/include/boost/graph/graph_concepts.hpp: In substitution of ‘template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&) [with T = int]’:
test_part.cpp:199:62:   required from here
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: error: ‘int’ is not a class, struct, or union type
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note: candidate: template<class Config, class Base> std::pair<typename Config::vertex_iterator, typename Config::vertex_iterator> boost::vertices(const boost::adj_list_helper<Config, Base>&)
     vertices(const adj_list_helper<Config, Base>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note:   template argument deduction/substitution failed:
test_part.cpp:199:62: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:476:1: note: candidate: template<class G> std::pair<typename boost::subgraph<Graph>::vertex_iterator, typename boost::subgraph<Graph>::vertex_iterator> boost::vertices(const boost::subgraph<Graph>&)
 vertices(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:476:1: note:   template argument deduction/substitution failed:
test_part.cpp:199:62: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note: candidate: template<class G, class EP, class VP> std::pair<typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator, typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator> boost::vertices(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   vertices(const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note:   template argument deduction/substitution failed:
test_part.cpp:199:62: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> std::pair<boost::iterators::counting_iterator<EdgeIndex>, boost::iterators::counting_iterator<EdgeIndex> > boost::vertices(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 inline vertices(const BOOST_CSR_GRAPH_TYPE& g) {
        ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note:   template argument deduction/substitution failed:
test_part.cpp:199:62: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
test_part.cpp:201:38: error: request for member ‘local_to_global’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
             cout << subgraph_vect[i].local_to_global(*v) << ", ";
                                      ^
test_part.cpp:205:25: error: ‘e’ was not declared in this scope
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                         ^
test_part.cpp:205:28: error: ‘e_end’ was not declared in this scope
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                            ^
test_part.cpp:205:59: error: no matching function for call to ‘edges(graph_type&)’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:585:5: note: candidate: template<class Config> std::pair<typename Config::edge_iterator, typename Config::edge_iterator> boost::edges(const boost::directed_edges_helper<Config>&)
     edges(const directed_edges_helper<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:585:5: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::directed_edges_helper<Config>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1006:5: note: candidate: template<class Config> std::pair<typename Config::edge_iterator, typename Config::edge_iterator> boost::edges(const boost::undirected_graph_helper<C>&)
     edges(const undirected_graph_helper<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1006:5: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::undirected_graph_helper<C>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1187:5: note: candidate: template<class Config> std::pair<typename Config::edge_iterator, typename Config::edge_iterator> boost::edges(const boost::bidirectional_graph_helper<C>&)
     edges(const bidirectional_graph_helper<Config>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1187:5: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::bidirectional_graph_helper<C>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:490:1: note: candidate: template<class G> std::pair<typename boost::subgraph<Graph>::edge_iterator, typename boost::subgraph<Graph>::edge_iterator> boost::edges(const boost::subgraph<Graph>&)
 edges(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:490:1: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:295:3: note: candidate: template<class G, class EP, class VP> std::pair<typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::edge_iterator, typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::edge_iterator> boost::edges(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   edges(const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:295:3: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1248:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> std::pair<typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_iterator, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_iterator> boost::edges(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 edges(const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1248:1: note:   template argument deduction/substitution failed:
test_part.cpp:205:59: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         for (boost::tie(e, e_end) = edges(subgraph_vect[i]); e != e_end; ++e)
                                                           ^
test_part.cpp:207:38: error: request for member ‘local_to_global’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
             cout << subgraph_vect[i].local_to_global(*e) << ", ";
                                      ^
test_part.cpp:246:22: error: expected ‘;’ before ‘vertID’
         v_descriptor vertID = 0;
                      ^
test_part.cpp:249:25: error: ‘v’ was not declared in this scope
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                         ^
test_part.cpp:249:28: error: ‘v_end’ was not declared in this scope
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                            ^
test_part.cpp:249:62: error: no matching function for call to ‘vertices(graph_type&)’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/detail/adjacency_list.hpp:32:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:223,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note: candidate: template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&)
 typename T::ThereReallyIsNoMemberByThisNameInT vertices(T const&);
                                                ^
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: note:   template argument deduction/substitution failed:
/usr/local/include/boost/graph/graph_concepts.hpp: In substitution of ‘template<class T> typename T::ThereReallyIsNoMemberByThisNameInT boost::vertices(const T&) [with T = int]’:
test_part.cpp:249:62:   required from here
/usr/local/include/boost/graph/graph_concepts.hpp:47:48: error: ‘int’ is not a class, struct, or union type
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note: candidate: template<class Config, class Base> std::pair<typename Config::vertex_iterator, typename Config::vertex_iterator> boost::vertices(const boost::adj_list_helper<Config, Base>&)
     vertices(const adj_list_helper<Config, Base>& g_)
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1602:5: note:   template argument deduction/substitution failed:
test_part.cpp:249:62: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:476:1: note: candidate: template<class G> std::pair<typename boost::subgraph<Graph>::vertex_iterator, typename boost::subgraph<Graph>::vertex_iterator> boost::vertices(const boost::subgraph<Graph>&)
 vertices(const subgraph<G>& g)
 ^
/usr/local/include/boost/graph/subgraph.hpp:476:1: note:   template argument deduction/substitution failed:
test_part.cpp:249:62: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note: candidate: template<class G, class EP, class VP> std::pair<typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator, typename boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>::vertex_iterator> boost::vertices(const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   vertices(const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:282:3: note:   template argument deduction/substitution failed:
test_part.cpp:249:62: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> std::pair<boost::iterators::counting_iterator<EdgeIndex>, boost::iterators::counting_iterator<EdgeIndex> > boost::vertices(const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 inline vertices(const BOOST_CSR_GRAPH_TYPE& g) {
        ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1119:8: note:   template argument deduction/substitution failed:
test_part.cpp:249:62: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         for (boost::tie(v, v_end) = vertices(subgraph_vect[i]); v != v_end; ++v)
                                                              ^
test_part.cpp:255:17: error: ‘vertID’ was not declared in this scope
                 vertID = subgraph_vect[i].local_to_global(*v);
                 ^
test_part.cpp:255:43: error: request for member ‘local_to_global’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
                 vertID = subgraph_vect[i].local_to_global(*v);
                                           ^
test_part.cpp:293:58: error: request for member ‘global_to_local’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
         vque_arr[i].push(std::make_pair(subgraph_vect[i].global_to_local(avtrow[i]), 0));
                                                          ^
test_part.cpp:300:51: error: no matching function for call to ‘get(boost::vertex_index_t, graph_type&)’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:128:19: note: candidate: template<class T> const T& get(const T*, std::ptrdiff_t)
   inline const T& get(const T* pa, std::ptrdiff_t k) { return pa[k]; }
                   ^
/usr/local/include/boost/property_map/property_map.hpp:128:19: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const T*’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const GraphProperty& boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> GraphProperty& boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::const_type boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::type boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const EdgeProperty& boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeProperty& boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::const_type boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::type boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const VertexProperty& boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> VertexProperty& boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::const_type boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::type boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type>::reference boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type>::reference boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note: candidate: template<class G, class EP, class VP, class Property, class Key> typename boost::property_map_value<G, Property>::type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&, const Key&)
   get(Property p, const filtered_graph<G, EP, VP>& g, const Key& k)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::const_type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::type boost::get(Property, boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note: candidate: template<class Key> std::__cxx11::string boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&, boost::type<Value>)
 get(const std::string& name, const dynamic_properties& dp, const Key& key, type<Value>)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::const_type boost::get(boost::local_property<Property>, const boost::subgraph<Graph>&)
 get(local_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::type boost::get(boost::local_property<Property>, boost::subgraph<Graph>&)
 get(local_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::const_type boost::get(boost::global_property<Property>, const boost::subgraph<Graph>&)
 get(global_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::type boost::get(boost::global_property<Property>, boost::subgraph<Graph>&)
 get(global_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:982:1: note: candidate: template<class G, class Property, class Key> typename boost::property_traits<typename boost::property_map<boost::subgraph<Graph>, Property>::const_type>::value_type boost::get(Property, const boost::subgraph<Graph>&, const Key&)
 get(Property p, const subgraph<G>& g, const Key& k) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:982:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:973:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::const_type boost::get(Property, const boost::subgraph<Graph>&)
 get(Property p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:973:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:966:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::type boost::get(Property, boost::subgraph<Graph>&)
 get(Property p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:966:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::subgraph<Graph>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::const_type>::reference boost::get(Property, const boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, const adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::type>::reference boost::get(Property, boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::const_type boost::get(Property, const boost::adj_list_helper<Config, Base>&)
     get(Property p, const adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::type boost::get(Property, boost::adj_list_helper<Config, Base>&)
     get(Property p, adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note: candidate: template<class Tag, class Vertex, class EdgeVec, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note: candidate: template<class Tag, class Vertex, class Iter, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_iter<Vertex, Iter, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::detail::stored_edge_iter<Vertex, Iter, Property>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note: candidate: template<class Tag, class Vertex, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_property<Vertex, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::detail::stored_edge_property<Vertex, Property>’ and ‘graph_type {aka int}’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1326:1: note: candidate: template<class T> typename boost::optional<T>::pointer_type boost::get(boost::optional<T>*)
 get ( optional<T>* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1326:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::optional<T>*’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1318:1: note: candidate: template<class T> typename boost::optional<T>::pointer_const_type boost::get(const boost::optional<T>*)
 get ( optional<T> const* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1318:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::optional<T>*’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1308:1: note: candidate: template<class T> typename boost::optional<T>::reference_type boost::get(boost::optional<T>&)
 get ( optional<T>& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1308:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::optional<T>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1300:1: note: candidate: template<class T> typename boost::optional<T>::reference_const_type boost::get(const boost::optional<T>&)
 get ( optional<T> const& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1300:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::optional<T>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:981:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:981:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1004:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1004:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1049:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1049:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1068:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1068:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:301:3: note: candidate: template<class PropertyMap, class Reference, class K> Reference boost::get(const boost::put_get_helper<Reference, PropertyMap>&, const K&)
   get(const put_get_helper<Reference, PropertyMap>& pa, const K& k)
   ^
/usr/local/include/boost/property_map/property_map.hpp:301:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::put_get_helper<Reference, PropertyMap>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:164:3: note: candidate: template<class K, class V> const typename boost::readable_property_map_archetype<KeyArchetype, ValueArchetype>::reference& boost::get(const boost::readable_property_map_archetype<K, V>&, const typename boost::readable_property_map_archetype<K, V>::key_type&)
   get(const readable_property_map_archetype<K,V>&, 
   ^
/usr/local/include/boost/property_map/property_map.hpp:164:3: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::readable_property_map_archetype<K, V>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::non_const_type boost::tuples::get(boost::tuples::cons<HT, TT>&)
 get(cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::const_type boost::tuples::get(const boost::tuples::cons<HT, TT>&)
 get(const cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:844:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >&& std::get(std::tuple<_Args2 ...>&&)
     get(tuple<_Elements...>&& __t) noexcept
     ^
/usr/include/c++/5/tuple:844:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:838:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(const std::tuple<_Args2 ...>&)
     get(const tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:838:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:832:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(std::tuple<_Args2 ...>&)
     get(tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:832:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:297:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:297:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:289:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^
/usr/include/c++/5/array:289:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:280:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:280:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:157:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:157:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘const std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:152:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^
/usr/include/c++/5/utility:152:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:147:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:147:5: note:   template argument deduction/substitution failed:
test_part.cpp:300:51: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
         index = get(vertex_index, subgraph_vect[i]);
                                                   ^
test_part.cpp:302:43: error: request for member ‘global_to_local’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
         clr_arr[i][index[subgraph_vect[i].global_to_local(avtrow[i])]] = true;
                                           ^
test_part.cpp:326:13: error: ‘vLocalID’ was not declared in this scope
             vLocalID = hopPair.first;
             ^
test_part.cpp:326:32: error: request for member ‘first’ in ‘hopPair’, which is of non-class type ‘hop_pair_t {aka int}’
             vLocalID = hopPair.first;
                                ^
test_part.cpp:327:32: error: request for member ‘second’ in ‘hopPair’, which is of non-class type ‘hop_pair_t {aka int}’
             hopcount = hopPair.second;
                                ^
test_part.cpp:330:55: error: no matching function for call to ‘get(boost::vertex_index_t, graph_type&)’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:128:19: note: candidate: template<class T> const T& get(const T*, std::ptrdiff_t)
   inline const T& get(const T* pa, std::ptrdiff_t k) { return pa[k]; }
                   ^
/usr/local/include/boost/property_map/property_map.hpp:128:19: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const T*’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const GraphProperty& boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1580:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> GraphProperty& boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>*)
 get(graph_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1571:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::const_type boost::get(boost::graph_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1564:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::graph_all_t>::type boost::get(boost::graph_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(graph_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1557:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::graph_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const EdgeProperty& boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1538:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeProperty& boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, const typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor&)
 get(edge_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1529:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::const_type boost::get(boost::edge_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1522:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_all_t>::type boost::get(boost::edge_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1515:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> const VertexProperty& boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1497:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> VertexProperty& boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_all_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1489:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::const_type boost::get(boost::vertex_all_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, const BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1482:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::vertex_all_t>::type boost::get(boost::vertex_all_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_all_t, BOOST_CSR_GRAPH_TYPE& g)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1475:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::vertex_all_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1467:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1458:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> EdgeIndex boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>::edge_descriptor)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1450:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, boost::edge_index_t>::const_type boost::get(boost::edge_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(edge_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1441:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘boost::edge_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1433:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1426:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> Vertex boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, Vertex)
 get(vertex_index_t,
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1418:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex> boost::typed_identity_property_map<Vertex> boost::get(boost::vertex_index_t, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(vertex_index_t, const BOOST_CSR_GRAPH_TYPE&)
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1411:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type>::reference boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1358:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_traits<typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type>::reference boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&, typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::key_type)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g, typename property_map<BOOST_CSR_GRAPH_TYPE, Tag>::key_type k) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1350:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::const_type boost::get(Tag, const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, const BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1344:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:28:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note: candidate: template<class Directed, class VertexProperty, class EdgeProperty, class GraphProperty, class Vertex, class EdgeIndex, class Tag> typename boost::property_map<boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>, Tag>::type boost::get(Tag, boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>&)
 get(Tag tag, BOOST_CSR_GRAPH_TYPE& g) {
 ^
/usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:1338:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::compressed_sparse_row_graph<Directed, VertexProperty, EdgeProperty, GraphProperty, Vertex, EdgeIndex>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note: candidate: template<class G, class EP, class VP, class Property, class Key> typename boost::property_map_value<G, Property>::type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&, const Key&)
   get(Property p, const filtered_graph<G, EP, VP>& g, const Key& k)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:484:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::const_type boost::get(Property, const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, const filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:476:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/compressed_sparse_row_graph.hpp:27:0,
                 from /usr/local/include/boost/graph/graphviz.hpp:28,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note: candidate: template<class G, class EP, class VP, class Property> typename boost::property_map<G, Property>::type boost::get(Property, boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>&)
   get(Property p, filtered_graph<G, EP, VP>& g)
   ^
/usr/local/include/boost/graph/filtered_graph.hpp:469:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::filtered_graph<Graph, EdgePredicate, VertexPredicate>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note: candidate: template<class Key> std::__cxx11::string boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:330:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&, boost::type<Value>)
 get(const std::string& name, const dynamic_properties& dp, const Key& key, type<Value>)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:317:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:25:0,
                 from test_part.cpp:9:
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note: candidate: template<class Value, class Key> Value boost::get(const string&, const boost::dynamic_properties&, const Key&)
 get(const std::string& name, const dynamic_properties& dp, const Key& key)
 ^
/usr/local/include/boost/property_map/dynamic_property_map.hpp:304:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   cannot convert ‘vertex_index’ (type ‘boost::vertex_index_t’) to type ‘const string& {aka const std::__cxx11::basic_string<char>&}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::const_type boost::get(boost::local_property<Property>, const boost::subgraph<Graph>&)
 get(local_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1032:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::local_property<Property> >::type boost::get(boost::local_property<Property>, boost::subgraph<Graph>&)
 get(local_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1023:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::local_property<Property>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::const_type boost::get(boost::global_property<Property>, const boost::subgraph<Graph>&)
 get(global_property<Property> p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1010:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, boost::global_property<Property> >::type boost::get(boost::global_property<Property>, boost::subgraph<Graph>&)
 get(global_property<Property> p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:1001:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::global_property<Property>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:982:1: note: candidate: template<class G, class Property, class Key> typename boost::property_traits<typename boost::property_map<boost::subgraph<Graph>, Property>::const_type>::value_type boost::get(Property, const boost::subgraph<Graph>&, const Key&)
 get(Property p, const subgraph<G>& g, const Key& k) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:982:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:973:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::const_type boost::get(Property, const boost::subgraph<Graph>&)
 get(Property p, const subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:973:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::subgraph<Graph>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/graphviz.hpp:23:0,
                 from test_part.cpp:9:
/usr/local/include/boost/graph/subgraph.hpp:966:1: note: candidate: template<class G, class Property> typename boost::property_map<boost::subgraph<Graph>, Property>::type boost::get(Property, boost::subgraph<Graph>&)
 get(Property p, subgraph<G>& g) {
 ^
/usr/local/include/boost/graph/subgraph.hpp:966:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::subgraph<Graph>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::const_type>::reference boost::get(Property, const boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, const adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1755:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note: candidate: template<class Config, class Base, class Property, class Key> typename boost::property_traits<typename boost::property_map<typename Config::graph_type, Property>::type>::reference boost::get(Property, boost::adj_list_helper<Config, Base>&, const Key&)
     get(Property p, adj_list_helper<Config, Base>& g, const Key& key) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1745:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::const_type boost::get(Property, const boost::adj_list_helper<Config, Base>&)
     get(Property p, const adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1734:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note: candidate: template<class Config, class Base, class Property> typename boost::property_map<typename Config::graph_type, Property>::type boost::get(Property, boost::adj_list_helper<Config, Base>&)
     get(Property p, adj_list_helper<Config, Base>& g) {
     ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:1726:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::adj_list_helper<Config, Base>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note: candidate: template<class Tag, class Vertex, class EdgeVec, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:395:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::detail::stored_ra_edge_iter<Vertex, EdgeVec, Property>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note: candidate: template<class Tag, class Vertex, class Iter, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_iter<Vertex, Iter, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:387:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::detail::stored_edge_iter<Vertex, Iter, Property>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:223:0,
                 from test_part.cpp:7:
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note: candidate: template<class Tag, class Vertex, class Property> const typename boost::property_value<Property, Tag>::type& boost::get(Tag, const boost::detail::stored_edge_property<Vertex, Property>&)
   get(Tag property_tag,
   ^
/usr/local/include/boost/graph/detail/adjacency_list.hpp:379:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::detail::stored_edge_property<Vertex, Property>’ and ‘graph_type {aka int}’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1326:1: note: candidate: template<class T> typename boost::optional<T>::pointer_type boost::get(boost::optional<T>*)
 get ( optional<T>* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1326:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::optional<T>*’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1318:1: note: candidate: template<class T> typename boost::optional<T>::pointer_const_type boost::get(const boost::optional<T>*)
 get ( optional<T> const* opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1318:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::optional<T>*’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1308:1: note: candidate: template<class T> typename boost::optional<T>::reference_type boost::get(boost::optional<T>&)
 get ( optional<T>& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1308:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::optional<T>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/optional.hpp:15:0,
                 from /usr/local/include/boost/graph/named_graph.hpp:21,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/optional/optional.hpp:1300:1: note: candidate: template<class T> typename boost::optional<T>::reference_const_type boost::get(const boost::optional<T>&)
 get ( optional<T> const& opt )
 ^
/usr/local/include/boost/optional/optional.hpp:1300:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::optional<T>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:981:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:981:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1004:1: note: candidate: template<int N, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::nth_index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, N>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1004:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1049:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1049:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/named_graph.hpp:20:0,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:37,
                 from test_part.cpp:7:
/usr/local/include/boost/multi_index_container.hpp:1068:1: note: candidate: template<class Tag, class Value, class IndexSpecifierList, class Allocator> const typename boost::multi_index::index<boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>, Tag>::type& boost::multi_index::get(const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>&)
 get(
 ^
/usr/local/include/boost/multi_index_container.hpp:1068:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:301:3: note: candidate: template<class PropertyMap, class Reference, class K> Reference boost::get(const boost::put_get_helper<Reference, PropertyMap>&, const K&)
   get(const put_get_helper<Reference, PropertyMap>& pa, const K& k)
   ^
/usr/local/include/boost/property_map/property_map.hpp:301:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::put_get_helper<Reference, PropertyMap>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/graph/adjacency_list.hpp:28:0,
                 from test_part.cpp:7:
/usr/local/include/boost/property_map/property_map.hpp:164:3: note: candidate: template<class K, class V> const typename boost::readable_property_map_archetype<KeyArchetype, ValueArchetype>::reference& boost::get(const boost::readable_property_map_archetype<K, V>&, const typename boost::readable_property_map_archetype<K, V>::key_type&)
   get(const readable_property_map_archetype<K,V>&, 
   ^
/usr/local/include/boost/property_map/property_map.hpp:164:3: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::readable_property_map_archetype<K, V>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::non_const_type boost::tuples::get(boost::tuples::cons<HT, TT>&)
 get(cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:216:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/local/include/boost/tuple/tuple.hpp:28:0,
                 from /usr/local/include/boost/unordered/detail/allocate.hpp:31,
                 from /usr/local/include/boost/unordered/detail/buckets.hpp:16,
                 from /usr/local/include/boost/unordered/detail/table.hpp:15,
                 from /usr/local/include/boost/unordered/detail/extract_key.hpp:14,
                 from /usr/local/include/boost/unordered/detail/equivalent.hpp:15,
                 from /usr/local/include/boost/unordered/detail/set.hpp:7,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note: candidate: template<int N, class HT, class TT> typename boost::tuples::access_traits<typename boost::tuples::element<N, boost::tuples::cons<HT, TT> >::type>::const_type boost::tuples::get(const boost::tuples::cons<HT, TT>&)
 get(const cons<HT, TT>& c) {
 ^
/usr/local/include/boost/tuple/detail/tuple_basic.hpp:230:1: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const boost::tuples::cons<HT, TT>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:844:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >&& std::get(std::tuple<_Args2 ...>&&)
     get(tuple<_Elements...>&& __t) noexcept
     ^
/usr/include/c++/5/tuple:844:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:838:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(const std::tuple<_Args2 ...>&)
     get(const tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:838:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/functional:55:0,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/tuple:832:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i, std::tuple<_Args2 ...> >& std::get(std::tuple<_Args2 ...>&)
     get(tuple<_Elements...>& __t) noexcept
     ^
/usr/include/c++/5/tuple:832:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::tuple<_Args2 ...>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:297:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)
     get(const array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:297:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:289:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)
     get(array<_Tp, _Nm>&& __arr) noexcept
     ^
/usr/include/c++/5/array:289:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from /usr/include/c++/5/tuple:39:0,
                 from /usr/include/c++/5/functional:55,
                 from /usr/include/c++/5/memory:79,
                 from /usr/local/include/boost/unordered/unordered_set_fwd.hpp:14,
                 from /usr/local/include/boost/unordered/detail/set.hpp:6,
                 from /usr/local/include/boost/unordered/unordered_set.hpp:17,
                 from /usr/local/include/boost/unordered_set.hpp:17,
                 from /usr/local/include/boost/graph/adjacency_list.hpp:21,
                 from test_part.cpp:7:
/usr/include/c++/5/array:280:5: note: candidate: template<long unsigned int _Int, class _Tp, long unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)
     get(array<_Tp, _Nm>& __arr) noexcept
     ^
/usr/include/c++/5/array:280:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::array<_Tp, _Nm>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:157:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)
     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:157:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘const std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:152:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)
     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
     ^
/usr/include/c++/5/utility:152:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
In file included from test_part.cpp:5:0:
/usr/include/c++/5/utility:147:5: note: candidate: template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)
     get(std::pair<_Tp1, _Tp2>& __in) noexcept
     ^
/usr/include/c++/5/utility:147:5: note:   template argument deduction/substitution failed:
test_part.cpp:330:55: note:   mismatched types ‘std::pair<_Tp1, _Tp2>’ and ‘boost::vertex_index_t’
             index = get(vertex_index, subgraph_vect[i]);
                                                       ^
test_part.cpp:332:28: error: ‘vi’ was not declared in this scope
             for(boost::tie(vi, vi_end) = adjacent_vertices(vLocalID, subgraph_vect[i]); vi != vi_end; ++vi)
                            ^
test_part.cpp:332:32: error: ‘vi_end’ was not declared in this scope
             for(boost::tie(vi, vi_end) = adjacent_vertices(vLocalID, subgraph_vect[i]); vi != vi_end; ++vi)
                                ^
test_part.cpp:340:80: error: request for member ‘local_to_global’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
                     avt_unmatched[i].push_back(std::make_pair(subgraph_vect[i].local_to_global(*vi), hopcount+1));
                                                                                ^
test_part.cpp:362:32: error: request for member ‘first’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
            avt_unmatched[i][j].first;
                                ^
test_part.cpp:375:41: error: request for member ‘first’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
             cout << avt_unmatched[i][j].first << '(' << avt_unmatched[i][j].second << ") ";
                                         ^
test_part.cpp:375:77: error: request for member ‘second’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
             cout << avt_unmatched[i][j].first << '(' << avt_unmatched[i][j].second << ") ";
                                                                             ^
test_part.cpp:385:17: error: invalid types ‘vert_vec {aka int}[int]’ for array subscript
         avt[0][i] = avt_unmatched[0][i].first;
                 ^
test_part.cpp:385:41: error: request for member ‘first’ in ‘avt_unmatched->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)i))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
         avt[0][i] = avt_unmatched[0][i].first;
                                         ^
test_part.cpp:392:29: error: request for member ‘size’ in ‘*(avt + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘vert_vec {aka int}’
         for(j=0; j < avt[i].size(); ++j)
                             ^
test_part.cpp:395:17: error: ‘v_next_col’ was not declared in this scope
             for(v_next_col = avt_unmatched[i+1].first.begin(); v_next_col != avt_unmatched[i+1].first.end; ++v_next_col)
                 ^
test_part.cpp:395:49: error: ‘avt_vector_t {aka class std::vector<int>}’ has no member named ‘first’
             for(v_next_col = avt_unmatched[i+1].first.begin(); v_next_col != avt_unmatched[i+1].first.end; ++v_next_col)
                                                 ^
test_part.cpp:395:97: error: ‘avt_vector_t {aka class std::vector<int>}’ has no member named ‘first’
             for(v_next_col = avt_unmatched[i+1].first.begin(); v_next_col != avt_unmatched[i+1].first.end; ++v_next_col)
                                                                                                 ^
test_part.cpp:397:61: error: request for member ‘first’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
                 cout << "comparing " << avt_unmatched[i][j].first << " to " << *v_next_col;
                                                             ^
test_part.cpp:398:64: error: request for member ‘global_to_local’ in ‘*(subgraph_vect + ((sizetype)(((long unsigned int)i) * 4ul)))’, which is of non-class type ‘graph_type {aka int}’
                 degrees = std::abs(out_degree(subgraph_vect[i].global_to_local(avt_unmatched[i][j].first), subgraph_vect[i]) - out_degree(subgraph_vect[i+1].global_to_local(*v_next_col.first), subgraph_vect[i+1]));
                                                                ^
test_part.cpp:398:100: error: request for member ‘first’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
                 degrees = std::abs(out_degree(subgraph_vect[i].global_to_local(avt_unmatched[i][j].first), subgraph_vect[i]) - out_degree(subgraph_vect[i+1].global_to_local(*v_next_col.first), subgraph_vect[i+1]));
                                                                                                    ^
test_part.cpp:398:158: error: request for member ‘global_to_local’ in ‘*(subgraph_vect + ((((sizetype)i) + 1u) * 4u))’, which is of non-class type ‘graph_type {aka int}’
                 degrees = std::abs(out_degree(subgraph_vect[i].global_to_local(avt_unmatched[i][j].first), subgraph_vect[i]) - out_degree(subgraph_vect[i+1].global_to_local(*v_next_col.first), subgraph_vect[i+1]));
                                                                                                                                                              ^
test_part.cpp:399:57: error: request for member ‘second’ in ‘(avt_unmatched + ((sizetype)(((long unsigned int)i) * 24ul)))->std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)j))’, which is of non-class type ‘__gnu_cxx::__alloc_traits<std::allocator<int> >::value_type {aka int}’
                 hopcount = std::abs(avt_unmatched[i][j].second - *v_next_col.second);
                                                         ^
test_part.cpp:404:21: error: ‘v’ was not declared in this scope
                     v = *v_next_col;
                     ^
test_part.cpp:407:23: error: invalid types ‘vert_vec {aka int}[int]’ for array subscript
             avt[i+1][j] = v;
                       ^
test_part.cpp:407:27: error: ‘v’ was not declared in this scope
             avt[i+1][j] = v;
                           ^
test_part.cpp:418:14: error: type ‘<type error>’ argument given to ‘delete’, expected pointer
     delete[] avtrow;
              ^
In file included from test_part.cpp:9:0:
/usr/local/include/boost/graph/graphviz.hpp: In instantiation of ‘void boost::detail::graph::mutate_graph_impl<MutableGraph>::do_add_vertex(const node_t&) [with MutableGraph = int; boost::detail::graph::node_t = std::__cxx11::basic_string<char>]’:
test_part.cpp:434:1:   required from here
/usr/local/include/boost/graph/graphviz.hpp:742:5: error: using invalid field ‘boost::detail::graph::mutate_graph_impl<MutableGraph>::bgl_nodes’
     bgl_nodes.insert(std::make_pair(node, v));
     ^
/usr/local/include/boost/graph/graphviz.hpp: In instantiation of ‘void boost::detail::graph::mutate_graph_impl<MutableGraph>::do_add_edge(const boost::detail::graph::edge_t&, const node_t&, const node_t&) [with MutableGraph = int; boost::detail::graph::node_t = std::__cxx11::basic_string<char>]’:
test_part.cpp:434:1:   required from here
/usr/local/include/boost/graph/graphviz.hpp:758:7: error: using invalid field ‘boost::detail::graph::mutate_graph_impl<MutableGraph>::bgl_edges’
       bgl_edges.insert(std::make_pair(edge, result.first));
       ^
/usr/local/include/boost/graph/graphviz.hpp: In instantiation of ‘void boost::detail::graph::mutate_graph_impl<MutableGraph>::set_node_property(const id_t&, const node_t&, const id_t&) [with MutableGraph = int; boost::detail::graph::id_t = std::__cxx11::basic_string<char>; boost::detail::graph::node_t = std::__cxx11::basic_string<char>]’:
test_part.cpp:434:1:   required from here
/usr/local/include/boost/graph/graphviz.hpp:765:28: error: using invalid field ‘boost::detail::graph::mutate_graph_impl<MutableGraph>::bgl_nodes’
     put(key, dp_, bgl_nodes[node], value);
                            ^
/usr/local/include/boost/graph/graphviz.hpp: In instantiation of ‘void boost::detail::graph::mutate_graph_impl<MutableGraph>::set_edge_property(const id_t&, const boost::detail::graph::edge_t&, const id_t&) [with MutableGraph = int; boost::detail::graph::id_t = std::__cxx11::basic_string<char>]’:
test_part.cpp:434:1:   required from here
/usr/local/include/boost/graph/graphviz.hpp:771:28: error: using invalid field ‘boost::detail::graph::mutate_graph_impl<MutableGraph>::bgl_edges’
     put(key, dp_, bgl_edges[edge], value);
                            ^
make: *** [test_part.o] Error 1
